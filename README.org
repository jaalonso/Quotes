#+TITLE: Quotes on Mathematics and Computer Science

** [[https://bit.ly/3Hg30lo][Aaron Swartz]]

+ Be curious. Read widely. Try new things. I think a lot of what people call
  intelligence boils down to curiosity.

** [[https://en.wikipedia.org/wiki/Alan_Perlis][Alan J. Perlis]]

+ A good programming language is a conceptual universe for thinking about
  programming.

+ A language that doesn't affect the way you think about programming is not
  worth knowing.

+ A programming language is low level when its programs require attention to the
  irrelevant.

+ Fools ignore complexity. Pragmatists suffer it. Some can avoid it. Geniuses
  remove it.

+ It is easier to write an incorrect program than understand a correct one.

+ You think you know when you learn, are more sure when you can write, even more
  when you can teach, but certain when you can program.

** [[https://en.wikipedia.org/wiki/Alan_Turing][Alan Turing]]

+ Codes are a puzzle. A game, just like any other game.

+ In order that the man who checks may not have too difficult a task, the
  programmer should make a number of definite assertions which can be checked
  individually, and from which the correctness of the whole program easily
  follows.

+ Programming is a skill best acquired by practice and example rather than from
  books.

** [[https://en.wikipedia.org/wiki/Alfred_Aho][Alfred Aho]] and [[https://en.wikipedia.org/wiki/Jeffrey_Ullman][Jeffrey Ullman]]

+ Computer Science is a science of abstraction — creating the right model for a
  problem and devising the appropriate mechanizable techniques to solve it.

** [[https://en.wikipedia.org/wiki/Bertrand_Meyer][Bertrand Meyer]]

+ Correctness is clearly the prime quality. If a system does not do what it is
  supposed to do, then everything else about it matters little.

** [[https://en.wikipedia.org/wiki/Brian_Kernighan][Brian Kernighan]]

+ Controlling complexity is the essence of computer programming.

+ Programming is learned by writing programs.

** [[https://en.wikipedia.org/wiki/Buckminster_Fuller][Buckminster Fuller]]

+ When I am working on a problem, I never think about beauty. I think only of
  how to solve the problem. But when I have finished, if the solution is not
  beautiful, I know it is wrong.

** [[https://en.wikipedia.org/wiki/Carl_Friedrich_Gauss][Carl Friedrich Gauss]]

+ It is not knowledge, but the act of learning, not possession but the act of
  getting there, which grants the greatest enjoyment.

** [[https://en.wikipedia.org/wiki/Carl_Gustav_Jakob_Jacobi][Carl Gustav Jacob Jacobi]]

+ "One should always generalize."

** [[https://en.wikipedia.org/wiki/David_Gelernter][David Gelernter]]

+ Beauty is more important in computing than anywhere else in technology because
  software is so complicated. Beauty is the ultimate defense against complexity.

** [[https://en.wikipedia.org/wiki/David_Hilbert][David Hilbert]]

+ It is an error to believe that rigor in a proof is an enemy of simplicity. On
  the contrary we find it confirmed by numerous examples that the rigorous
  method is, at the same time, the simpler and the more easily comprehended.
  The very effort for rigor forces us to find the simpler methods of proof.

+ The art of doing mathematics is finding that special case that contains all
  the germs of generality.

** [[https://en.wikipedia.org/wiki/Donald_Knuth][Donald Knuth]]

+ Computer programming is an art form, like the creation of poetry or music.

+ Computer programming is an art, because it applies accumulated knowledge to
  the world, because it requires skill and ingenuity, and especially because it
  produces objects of beauty. A programmer who subconsciously views himself as
  an artist will enjoy what he does and will do it better.

+ I find that I don't understand things unless I try to program them.

+ If you find that you're spending almost all your time on theory, start turning
  some attention to practical things; it will improve your theories. If you find
  that you're spending almost all your time on practice, start turning some
  attention to theoretical things; it will improve your practice.

+ Let us change our traditional attitude to the construction of programs:
  Instead of imagining that our main task is to instruct a computer what to do,
  let us concentrate rather on explaining to human beings what we want a
  computer to do.

+ Programming is the art of telling another human being what one wants the
  computer to do.

+ Science is what we understand well enough to explain to a computer. Art is
  everything else we do.

+ The best programs are written so that computing machines can perform them
  quickly and so that human beings can understand them clearly.

+ The best theory is inspired by practice. The best practice is inspired by
  theory.

+ The process of preparing programs for a digital computer is especially
  attractive, not only because it can be economically and scientifically
  rewarding, but also because it can be an aesthetic experience much like
  composing poetry or music.

+ The psychological profiling [of a programmer] is mostly the ability to shift
  levels of abstraction, from low level to high level. To see something in the
  small and to see something in the large.

+ The real problem is that programmers have spent far too much time worrying
  about efficiency in the wrong places and at the wrong times; premature
  optimization is the root of all evil (or at least most of it) in programming.

** [[https://en.wikipedia.org/wiki/Douglas_W._Jones][Douglas Jones]]

+ The fastest algorithm can frequently be replaced by one that is almost as fast
  and much easier to understand.

** [[https://en.wikipedia.org/wiki/Edsger_W._Dijkstra][Edsger W. Dijkstra]]

+ A programming language is a tool that has a profound influence on our thinking
  habits.

+ Besides a mathematical inclination, an exceptionally good mastery of one's
  native tongue is the most vital asset of a competent programmer.

+ Computer Science is no more about computers than astronomy is about
  telescopes.

+ How do we convince people that in programming simplicity and clarity —in
  short: what mathematicians call "elegance"— are not a dispensable luxury, but
  a crucial matter that decides between success and failure?

+ In computing, elegance is not a dispensable luxury but a quality that decides
  between success and failure

+ Program testing can be used to show the presence of bugs, but never to show
  their absence!

+ Progress is possible only if we train ourselves to think about programs
  without thinking of them as pieces of executable code.

+ Simplicity is a great virtue but it requires hard work to achieve it and
  education to appreciate it. And to make matters worse: complexity sells
  better.

+ The art of programming is the art of organizaing complexity, of mastering
  multitude and avoiding its bastard chaos.

** [[https://en.wikipedia.org/wiki/Enrico_Bombieri][Enrico Bombieri]]

+ When things get too complicated, it sometimes makes sense to stop and wonder:
  Have I asked the right question?

** [[https://en.wikipedia.org/wiki/Eric_Temple_Bell][Eric Temple Bell]]

+ Abstractness, sometimes hurled as a reproach at mathematics, is its chief
  glory and its surest title to practical usefulness. It is also the source of
  such beauty as may spring from mathematics.

** [[https://en.wikipedia.org/wiki/Georg_Cantor][Georg Cantor]]

+ In mathematics, the art of asking questions is more valuable than solving
  problems.

+ The essence of mathematics is its freedom.

** [[https://en.wikipedia.org/wiki/Georg_Gottlob][Georg Gottlob]]

+ Computer Science is the continuation of Logic by other means.

** [[https://en.wikipedia.org/wiki/George_Boole][George Boole]]

+ No matter how correct a mathematical theorem may appear to be, one ought
  never to be satisfied that there was not something imperfect about it until
  it also gives the impression of being beautiful.

** George Carrette

+ First learn computer science and all the theory. Next develop a programming
  style. Then forget all that and just hack.

** [[https://en.wikipedia.org/wiki/George_P%C3%B3lya][George Pólya]]

+ A great discovery solves a great problem but there is a grain of discovery in
  the solution of any problem. Your problem may be modest; but if it challenges
  your curiosity and brings into play your inventive faculties, and if you solve
  it by your own means, you may experience the tension and enjoy the triumph of
  discovery.

** [[https://en.wikipedia.org/wiki/G._H._Hardy][G. H. Hardy]]

+ A mathematician, like a painter or poet, is a maker of patterns. If his
  patterns are more permanent than theirs, it is because they are made with
  ideas.

+ The mathematician's patterns, like the painter's or the poet's must be
  beautiful; the ideas, like the colors or the words must fit together in a
  harmonious way. Beauty is the first test: there is no permanent place in this
  world for ugly mathematics.

** [[https://en.wikipedia.org/wiki/Gottfried_Wilhelm_Leibniz][Gottfried Wilhelm Leibniz]]

+ Nothing is more important than to see the sources of invention which are, in
  my opinion more interesting than the inventions themselves.

+ The pleasure we obtain from music comes from counting, but counting
  unconsciously. Music is nothing but unconscious arithmetic.

** [[https://en.wikipedia.org/wiki/Gottlob_Frege][Gottlob Frege]]

+ Every good mathematician is at least half a philosopher, and every good
  philosopher is at least half a mathematician.

** [[https://es.wikipedia.org/wiki/Grace_Murray_Hopper][Grace Hopper]]

+ The most dangerous phrase of the language is "It has always been done this way".

+ To me programming is more than an important practical art. It is also a
  gigantic undertaking in the foundations of knowledge.

** [[https://en.wikipedia.org/wiki/Hal_Abelson][Harold Abelson]]

+ Programs must be written for people to read, and only incidentally for
  machines to execute.

** [[https://en.wikipedia.org/wiki/Henri_Lebesgue][Henri Lebesgue]]

+ The only teaching that a professor can give, in my opinion, is that of
  thinking in front of his students.

** [[https://en.wikipedia.org/wiki/Henri_Poincar%C3%A9][Henri Poincaré]]

+ The mathematician does not study pure mathematics because it is useful; he
  studies it because he delights in it and he delights in it because it is
  beautiful.

** [[https://en.wikipedia.org/wiki/Herbert_A._Simon][Herbert A. Simon]]

+ In the computer field, the moment of truth is a running program; all else is
  prophecy.

** [[https://en.wikipedia.org/wiki/Hermann_Weyl][Hermann Weyl]]

+ My work always tried to unite the true with the beautiful; but when I had to
  choose one or the other, I usually chose the beautiful.

** [[https://en.wikipedia.org/wiki/Isaac_Newton][Isaac Newton]]

+ Truth is ever to be found in the simplicity, and not in the multiplicity and
  confusion of things.

** [[https://bit.ly/2vVVv3w][James J Sylvester]]

+ It is the constant aim of the mathematician to reduce all his expressions to
  the lowest terms, to retrench every superfluous word and phrase, and to
  condense the Maximum of meaning into the Minimum of language.

** [[https://en.wikipedia.org/wiki/Jean_Dieudonn%C3%A9][Jean Dieudonné]]

+ The life of a mathematician is dominated by an insatiable curiosity, a desire
  bordering on passion to solve the problems he is studying.

** [[https://wikipedia.org/wiki/John_McCarthy][John McCarthy]]

+ It is reasonable to hope that the relationship between computation and
  mathematical logic will be as fruitful in the next century as that between
  analysis and physics in the last. The development of this relationship demands
  a concern for both applications and for mathematical elegance.

** [[https://en.wikipedia.org/wiki/John_von_Neumann][John von Neumann]].

+ If people do not believe that mathematics is simple, it is only because they
  do not realize how complicated life is.

** [[https://en.wikipedia.org/wiki/Karl_Weierstrass][Karl Weierstrass]]

+ A mathematician who is not also something of a poet will never be a perfect
  mathematician.

** [[https://en.wikipedia.org/wiki/Kurt_G%C3%B6del][Kurt Gödel]]

+ The development of mathematics towards greater precision has led, as is well
  known, to the formalization of large tracts of it, so that one can prove any
  theorem using nothing but a few mechanical rules.

** [[https://en.wikipedia.org/wiki/L._Peter_Deutsch][L. Peter Deutsch]]

+ To iterate is human, to recurse divine.

** [[https://en.wikipedia.org/wiki/Leo_Tolstoy][Leo Tolstoy]]

+ Some mathematician, I believe, has said that true pleasure lies not in the
  discovery of truth, but in the search for it.

** [[https://en.wikipedia.org/wiki/Leonhard_Euler][Leonhard Euler]]

+ Nothing takes place in the world whose meaning is not that of some maximum or
  minimum.

** [[https://en.wikipedia.org/wiki/Linus_Torvalds][Linus Torvalds]]

+ Most of the good programmers do programming not because they expect to get
  paid or get adulation by the public, but because it is fun to program.

** [[https://en.wikipedia.org/wiki/Martin_Fowler_(software_engineer)][Martin Fowler]]

+ Any fool can write code that a computer can understand. Good programmers
  write code that humans can understand.

** [[https://wikipedia.org/wiki/Marvin_Minsky][Marvin Minsky]]

+ Computer languages of the future will be more concerned with goals and less
  with procedures specified by the programmer.

+ You don't understand anything until you learn it more than one way.

** [[https://wikipedia.org/wiki/Max_Planck][Max Planck]]

+ A new scientific truth does not triumph by convincing its opponents and
  making them see the light, but rather because its opponents eventually die,
  and a new generation grows up that is familiar with it.

** [[https://wikipedia.org/wiki/Niels_Bohr][Niels Bohr]]

+ An expert is a person who has made all the mistakes that can be made in a very
  narrow field.

** [[https://en.wikipedia.org/wiki/Niklaus_Wirth][Niklaus wirth]]

+ In our profession, precision and perfection are not a dispensable luxury, but
  a simple necessity.

** [[https://wikipedia.org/wiki/Oliver_Heaviside][Oliver Heaviside]]

+ Mathematics is an experimental science, and definitions do not come first, but
  later on.

** [[https://es.wikipedia.org/wiki/Paul_Dirac][Paul Dirac]]

+ A theory with mathematical beauty is more likely to be correct than an ugly
  one that fits some experimental data.

** [[https://en.wikipedia.org/wiki/Paul_Graham][Paul Graham]]

+ A good programming language should, like oil paint, make it easy to change
  your mind.

** [[https://en.wikipedia.org/wiki/Paul_Halmos][Paul Halmos]]

+ A good stack of examples, as large as possible, is indispensable for a
  thorough understanding of any concept, and when I want to learn something
  new, I make it my first job to build one.

** [[https://en.wikipedia.org/wiki/Paul_Hudak][Paul Hudak]]

+ Programming, in its broadest sense, is problem solving.

** Philip Greenspun

+ Greenspun's tenth rule of programming: "Any sufficiently complicated C or
  Fortran program contains an ad hoc informally-specified bug-ridden slow
  implementation of half of Common Lisp."

+ SQL, Lisp, and Haskell are the only programming languages that I've seen where
  one spends more time thinking than typing.

** [[https://en.wikipedia.org/wiki/Ren%C3%A9_Descartes][René Descartes]]

+ Each problem that I solved became a rule which served afterwards to solve
  other problems.

** [[https://es.wikipedia.org/wiki/Richard_Courant][Richard Courant]] y [[https://en.wikipedia.org/wiki/Herbert_Robbins][Herbert Robbins]]

+ Mathematics as an expression of the human mind reflects the active will, the
  contemplative reason, and the desire for aesthetic perfection. Its basic
  elements are logic and intuition, analysis and construction, generality and
  individuality.

** [[https://en.wikipedia.org/wiki/Richard_Hamming][Richard Hamming]]

+ The purpose of computing is insight, not numbers.

** [[https://en.wikipedia.org/wiki/Robert_Harper_(computer_scientist)][Robert Harper]]

+ Programming is an explanatory activity, a form of expression intended to
  convey an idea that is both comprehensible by other people and executable by a
  computer.

** [[https://en.wikipedia.org/wiki/Robert_Kowalski][Robert Kowalski]]

+ Predicate logic is a useful and practical, high-level, non-deterministic
  programming language with sound theoretical foundations.

** [[https://en.wikipedia.org/wiki/Stanislaw_Ulam][Stanislaw Ulam]]

+ The aesthetic side of mathematics has been of overwhelming importance
  throughout its growth. It is not so much whether a theorem is useful that
  matters, but how elegant it is.

** [[https://en.wikipedia.org/wiki/Tony_Hoare][Tony Hoare]]

+ In the development of our understanding of complex phenomena, the most
  powerful tool available to the human intellect :is abstraction. Abstraction
  arises from a recognition of similarities between certain objects, situations,
  or processes in the real world, and the decision to concentrate on these
  similarities, and to ignore for the time being the differences.

+ There are two ways of constructing a software design: One way is to make it so
  simple that there are obviously no deficiencies and the other way is to make
  it so complicated that there are no obvious deficiencies.
